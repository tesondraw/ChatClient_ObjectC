// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PublicUse.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum CMD

/** 命令 */
typedef GPB_ENUM(CMD) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CMD_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CMD_CmdInit = 0,

  /** 请求验证码 */
  CMD_RequestVerifyCode = 10001,

  /** 注册账号 */
  CMD_Register = 10003,

  /** 用户登录 */
  CMD_Login = 10005,

  /** 发出的消息 */
  CMD_MessageSend = 10101,

  /** 别人发给我的消息 */
  CMD_MessageRecv = 10201,

  /** 服务器发给我的消息 */
  CMD_MessageServer = 10301,
  CMD_Error = 50000,
};

GPBEnumDescriptor *CMD_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CMD_IsValidValue(int32_t value);

#pragma mark - Enum ErrorCode

/** 错误码 */
typedef GPB_ENUM(ErrorCode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ErrorCode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ErrorCode_ErrorCodeInit = 0,

  /** 已经注册 */
  ErrorCode_AlreadyRegisterd = 50001,

  /** 未注册 */
  ErrorCode_NotRegistered = 50002,

  /** 账号或密码错误 */
  ErrorCode_AccountOrPassword = 50003,

  /** 服务器内部错误 */
  ErrorCode_ServerInternal = 50004,

  /** 解析数据错误 */
  ErrorCode_ParseData = 50101,
};

GPBEnumDescriptor *ErrorCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ErrorCode_IsValidValue(int32_t value);

#pragma mark - Enum MessageType

/** 消息类型 */
typedef GPB_ENUM(MessageType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MessageType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MessageType_MessageTypeInit = 0,
  MessageType_Text = 1,
  MessageType_Image = 2,
  MessageType_Voice = 3,
  MessageType_Video = 4,
  MessageType_File = 5,
};

GPBEnumDescriptor *MessageType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MessageType_IsValidValue(int32_t value);

#pragma mark - Enum ChatType

/** 群组关系 */
typedef GPB_ENUM(ChatType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ChatType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ChatType_ChatTypeInit = 0,
  ChatType_Friend = 1,
  ChatType_Group = 2,
  ChatType_Room = 3,
};

GPBEnumDescriptor *ChatType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ChatType_IsValidValue(int32_t value);

#pragma mark - PublicUseRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PublicUseRoot : GPBRootObject
@end

#pragma mark - VerificationCodeReq

typedef GPB_ENUM(VerificationCodeReq_FieldNumber) {
  VerificationCodeReq_FieldNumber_Account = 1,
};

/**
 * 请求验证码
 **/
@interface VerificationCodeReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *account;

@end

#pragma mark - VerificationCodeRes

typedef GPB_ENUM(VerificationCodeRes_FieldNumber) {
  VerificationCodeRes_FieldNumber_VerificationCode = 1,
};

/**
 * 验证码返回结果
 **/
@interface VerificationCodeRes : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *verificationCode;

@end

#pragma mark - RegisterReq

typedef GPB_ENUM(RegisterReq_FieldNumber) {
  RegisterReq_FieldNumber_Account = 1,
  RegisterReq_FieldNumber_Password = 2,
  RegisterReq_FieldNumber_VerificationCode = 3,
};

/**
 * 请求注册
 **/
@interface RegisterReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *account;

@property(nonatomic, readwrite, copy, null_resettable) NSString *password;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verificationCode;

@end

#pragma mark - RegisterRes

typedef GPB_ENUM(RegisterRes_FieldNumber) {
  RegisterRes_FieldNumber_Code = 1,
};

/**
 * 注册返回结果
 **/
@interface RegisterRes : GPBMessage

@property(nonatomic, readwrite) int32_t code;

@end

#pragma mark - LoginReq

typedef GPB_ENUM(LoginReq_FieldNumber) {
  LoginReq_FieldNumber_Account = 1,
  LoginReq_FieldNumber_Password = 2,
};

/**
 * 登录
 **/
@interface LoginReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *account;

@property(nonatomic, readwrite, copy, null_resettable) NSString *password;

@end

#pragma mark - LoginRes

typedef GPB_ENUM(LoginRes_FieldNumber) {
  LoginRes_FieldNumber_Code = 1,
};

/**
 * 登录返回结果
 **/
@interface LoginRes : GPBMessage

@property(nonatomic, readwrite) int32_t code;

@end

#pragma mark - GeneralResponse

typedef GPB_ENUM(GeneralResponse_FieldNumber) {
  GeneralResponse_FieldNumber_Code = 1,
  GeneralResponse_FieldNumber_Message = 2,
};

/**
 * 通用响应
 **/
@interface GeneralResponse : GPBMessage

/** 0表示正确，其他的数字为错误码，请参照ErrorCode */
@property(nonatomic, readwrite) int32_t code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@end

#pragma mark - MessageContent

typedef GPB_ENUM(MessageContent_FieldNumber) {
  MessageContent_FieldNumber_TargetId = 1,
  MessageContent_FieldNumber_SenderId = 2,
  MessageContent_FieldNumber_Message = 3,
  MessageContent_FieldNumber_MsgType = 4,
  MessageContent_FieldNumber_ResourceURL = 5,
  MessageContent_FieldNumber_ChatType = 6,
};

@interface MessageContent : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *targetId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *senderId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@property(nonatomic, readwrite) MessageType msgType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resourceURL;

@property(nonatomic, readwrite) ChatType chatType;

@end

/**
 * Fetches the raw value of a @c MessageContent's @c msgType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MessageContent_MsgType_RawValue(MessageContent *message);
/**
 * Sets the raw value of an @c MessageContent's @c msgType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMessageContent_MsgType_RawValue(MessageContent *message, int32_t value);

/**
 * Fetches the raw value of a @c MessageContent's @c chatType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MessageContent_ChatType_RawValue(MessageContent *message);
/**
 * Sets the raw value of an @c MessageContent's @c chatType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMessageContent_ChatType_RawValue(MessageContent *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
